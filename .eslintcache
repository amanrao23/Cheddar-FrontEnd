<<<<<<< HEAD
[{"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js":"1","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js":"2","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js":"3","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js":"4","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js":"5","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js":"6","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js":"7","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js":"8","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js":"9","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js":"10","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js":"11","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js":"12","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js":"13","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js":"14","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/socketConfig.js":"15","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js":"16","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js":"17","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js":"18","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js":"19","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js":"20","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js":"21","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js":"22","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js":"23","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js":"24","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js":"25","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js":"26","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js":"27","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js":"28","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/RegisterComp.js":"29"},{"size":412,"mtime":1613729091926,"results":"30","hashOfConfig":"31"},{"size":1757,"mtime":1613759066387,"results":"32","hashOfConfig":"31"},{"size":1020,"mtime":1613729091926,"results":"33","hashOfConfig":"31"},{"size":326,"mtime":1613729091926,"results":"34","hashOfConfig":"31"},{"size":1099,"mtime":1613760987000,"results":"35","hashOfConfig":"31"},{"size":439,"mtime":1613729091922,"results":"36","hashOfConfig":"31"},{"size":980,"mtime":1613759066383,"results":"37","hashOfConfig":"31"},{"size":702,"mtime":1613729091922,"results":"38","hashOfConfig":"31"},{"size":1331,"mtime":1613729091922,"results":"39","hashOfConfig":"31"},{"size":1526,"mtime":1613985006489,"results":"40","hashOfConfig":"31"},{"size":1830,"mtime":1613975491541,"results":"41","hashOfConfig":"31"},{"size":1560,"mtime":1613991514907,"results":"42","hashOfConfig":"31"},{"size":1547,"mtime":1614015264458,"results":"43","hashOfConfig":"31"},{"size":344,"mtime":1613729091922,"results":"44","hashOfConfig":"31"},{"size":188,"mtime":1613829718813,"results":"45","hashOfConfig":"31"},{"size":3576,"mtime":1613985097972,"results":"46","hashOfConfig":"31"},{"size":2975,"mtime":1614015983467,"results":"47","hashOfConfig":"31"},{"size":1308,"mtime":1613987870584,"results":"48","hashOfConfig":"31"},{"size":188,"mtime":1613759066383,"results":"49","hashOfConfig":"31"},{"size":919,"mtime":1613986571618,"results":"50","hashOfConfig":"31"},{"size":752,"mtime":1613975491545,"results":"51","hashOfConfig":"31"},{"size":1221,"mtime":1614004029221,"results":"52","hashOfConfig":"31"},{"size":402,"mtime":1613729091926,"results":"53","hashOfConfig":"31"},{"size":1079,"mtime":1613975491545,"results":"54","hashOfConfig":"31"},{"size":2130,"mtime":1614017623307,"results":"55","hashOfConfig":"31"},{"size":1266,"mtime":1613991256175,"results":"56","hashOfConfig":"31"},{"size":3347,"mtime":1613989828045,"results":"57","hashOfConfig":"31"},{"size":3825,"mtime":1614019618828,"results":"58","hashOfConfig":"31"},{"size":4669,"mtime":1613985068453,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"fjuild",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js",[],["130","131"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js",["132"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport RegisterComp from \"../../components/auth/RegisterComp\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    username:'',\n    email: '',\n    password: '',\n    password2: '',\n\n  });\n\n  const { name,username, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name,username, email, password});\n      console.log('fjhdjh');\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/chat' />;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"\">\n        <RegisterComp\n          onChange={onChange}\n          onSubmit={onSubmit}\n          formData={formData}\n        />\n      </div>\n    </Fragment>\n\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  \n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register})(Register);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js",["133","134","135","136","137"],"import React, { useEffect } from \"react\";\nimport ChatComp from \"../../components/chat/ChatComp\";\nimport {\n  getConversations,\n  addConversation,\n  addEvent,\n} from \"../../actions/chat\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport socket from \"../../socketConfig\";\n\nconst Chat = ({ getConversations, addConversation, auth, chat, addEvent }) => {\n  const username = auth.user.username;\n  const conversations = chat.conversations;\n  useEffect(() => {\n    getConversations();\n  }, []);\n  useEffect(() => {\n    if (auth.user.username !== undefined && conversations.length > 0) {\n      socket.emit(\"join\", { username, conversations }, (error) => {\n        if (error) {\n          alert(error);\n        }\n      });\n    }\n  }, [auth, chat.conversations]);\n\n  useEffect(() => {\n    socket.on(\"newEvent\", ({ event }) => {\n      console.log(event, \"socket newMessage\");\n      console.log(event._id, \"eventid\");\n     console.log(chat)\n      if (chat.conversation && chat.conversation._id === event.chatRoomId) {\n        addEvent(event);\n      } else {\n        //send notification of new event\n      }\n    });\n  }, [chat.conversation]);\n  useEffect(() => {\n    socket.on(\"newConversation\", ({ newConvo }) => {\n      console.log(newConvo, \"new conversation\");\n      addConversation(newConvo);\n    });\n  }, []);\n  return <ChatComp />;\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  chat: state.chat,\n});\n\nexport default connect(mapStateToProps, {\n  getConversations,\n  addConversation,\n  addEvent,\n})(Chat);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/socketConfig.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js",["138"],"// import api from '../utils/api';\nimport axios from 'axios';\n\nimport { setAlert } from './alert';\nimport {\n  GET_CONVERSATIONS,\n  GET_CONVERSATIONS_ERROR,\n  NEW_CONVERSATION,\n  NEW_CONVERSATION_ERROR,\n  SET_CONVERSATION,\n  SET_CONVERSATION_ERROR,\n  GET_EVENTS,\n  GET_EVENTS_ERROR,\n  NEW_EVENT,\n  NEW_EVENT_ERROR,\n  ADD_CONVERSATION,\n  ADD_CONVERSATION_ERROR,\n  ADD_EVENT_ERROR,\n  ADD_EVENT\n} from './types';\n\n// Load User\nexport const getConversations = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/user/conversations');\n    console.log('load_user()', res.data);\n    dispatch({\n      type: GET_CONVERSATIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: GET_CONVERSATIONS_ERROR,\n    });\n  }\n};\n\nexport const newConversation = body => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/user/newConversation', body, config);\n\n    console.log('load_user()', res.data);\n    dispatch({\n      type: NEW_CONVERSATION,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: NEW_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const setConversation = conversation => async dispatch => {\n  try {\n    dispatch({\n      type: SET_CONVERSATION,\n      payload: conversation,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SET_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const getEvents = chatId => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const timestamp = null;\n  const body = { chatRoomId: chatId, timestamp: timestamp };\n  console.log(body);\n\n  try {\n\n    const res = await axios.post('/api/event/getEvents', body, config);\n    console.log(res.data)\n    dispatch({  \n      type: GET_EVENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: GET_EVENTS_ERROR,\n    });\n  }\n};\n\nexport const newEvent = body => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  console.log(body)\n  try {\n    const res= await axios.post('/api/event/newEvent', body, config);\n    //socket event\n\n    dispatch({\n      type: NEW_EVENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: NEW_EVENT_ERROR,\n    });\n  }\n};\n\nexport const addConversation = body => async dispatch => {\n  \n  try {\n    dispatch({\n      type: ADD_CONVERSATION,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_CONVERSATION_ERROR,\n    });\n  }\n};\nexport const addEvent = body => async dispatch => {\n  \n  try {\n    dispatch({\n      type: ADD_EVENT,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_EVENT_ERROR,\n    });\n  }\n};\n\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js",["139"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            {/* <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid> */}\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        \n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js",["140"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationsComp from '../../components/chat/ConversationsComp';\nimport { connect } from 'react-redux';\nimport { setConversation, getEvents } from '../../actions/chat';\nfunction Conversations({ chat, auth, setConversation, getEvents }) {\n  const onClick = conversation => {\n    setConversation(conversation);\n    getEvents(conversation._id);\n  };\n  return (\n    <ConversationsComp\n      conversations={chat.conversations}\n      auth={auth}\n      onClick={onClick}\n    />\n  );\n}\n\nConversations.propTypes = {};\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { setConversation, getEvents })(\n  Conversations\n);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js",["141","142","143","144"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationWindowComp from '../../components/chat/ConversationWindowComp';\nimport { connect } from 'react-redux';\nimport { newEvent } from '../../actions/chat';\nimport socket from '../../socketConfig';\n\nfunction ConversationWindow({ chat, newEvent }) {\n  const [formData, setFormData] = useState({\n    text: '',\n    type: 'new',\n  });\n\n  const onChange = e => setFormData({ ...formData, text: e.target.value });\n\n  const onSubmit = () => {\n    formData.chatRoomId = chat.conversation._id;\n    formData.messageId= chat.events.length + 1;\n\n    console.log(chat.events.length,\"length\")\n    newEvent(formData);\n    const { text, chatRoomId } = formData;\n    \n    // socket.emit('newEvent', {formData});\n    setFormData({ ...formData, text: '' });\n  };\n\n  return (\n    <ConversationWindowComp\n    events={chat.events}\n      conversation={chat.conversation}\n      formData={formData}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    />\n  );\n}\n\nConversationWindow.propTypes = {};\n\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { newEvent })(ConversationWindow);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js",["145","146"],"import {\n  NEW_CONVERSATION,\n  GET_CONVERSATIONS,\n  SET_CONVERSATION,\n  GET_EVENTS,\n  NEW_EVENT,\n  ADD_CONVERSATION,\n  ADD_EVENT,\n} from \"../actions/types\";\n\nconst initialState = {\n  conversations: [],\n  conversation: null,\n  events: [],\n  newEvents: [],\n  loading: true,\n};\n\nfunction chatReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_CONVERSATIONS:\n      return {\n        ...state,\n        conversations: payload,\n        loading: false,\n      };\n    case SET_CONVERSATION:\n      return {\n        ...state,\n        conversation: payload,\n        loading: false,\n      };\n    case NEW_CONVERSATION: {\n      state.conversations = state.conversations.filter(\n        (conversation) => conversation._id !== payload._id\n      );\n      console.log(payload);\n      return {\n        ...state,\n        conversations: [payload, ...state.conversations],\n        loading: false,\n      };\n    }\n    case GET_EVENTS: {\n      payload.sort((a,b)=>(a.messageId > b.messageId) ? 1 : ((b.messageId > a.messageId) ? -1 : 0))\n      return {\n        ...state,\n        events: payload,\n        loading: false,\n        // whenever he refreshes this should get called\n      };\n    }\n    case NEW_EVENT: {\n      // reducer newEvents -> events\n      console.log(payload)\n        if(payload.type!==\"new\"){\n          console.log(\"Edit/Delete\");\n         state.events[payload.messageId]=payload;\n        }\n        else{\n        return {\n          ...state,\n          events: [ ...state.events,payload],\n        };\n      }\n    }\n    case ADD_CONVERSATION: {\n      console.log(payload);\n      return {\n        ...state,\n        conversations: [payload, ...state.conversations],\n      };\n    }\n    case ADD_EVENT: {\n      // filter if not type == new\n      console.log(payload)\n        if(payload.type!==\"new\"){\n          console.log(\"Edit/Delete\");\n         state.events[payload.messageId]=payload;\n        }\n        else{\n        return {\n          ...state,\n          events: [ ...state.events,payload],\n        };\n      }\n    }\n    default:\n      return state;\n  }\n}\n\nexport default chatReducer;\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js",["147"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles({});\nconst NewConversationComp = ({ formData, onChange, onSubmit }) => {\n  const { username } = formData;\n  const classes = useStyles();\n\n  return (\n    <div>\n      <form noValidate onSubmit={onSubmit}>\n        <Grid item xs={12} style={{ padding: \"10px\",color:\"white\" }}>\n          <TextField\n            name=\"username\"\n            id=\"outlined-basic-email\"\n            label=\"Search\"\n            variant=\"outlined\"\n            fullWidth\n            value={username}\n            onChange={onChange}\n            color=\"white\"\n          />\n        </Grid>\n        <Grid item xs={12} style={{ padding: \"10px\" }}>\n          \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              value=\"Register\"\n            ><SearchIcon/></Button>\n          \n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nNewConversationComp.propTypes = {};\n\nexport default NewConversationComp;\n",["148","149"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js",["150"],"import React, { Fragment } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport green from \"@material-ui/core/colors/green\";\n\nimport {\n  Grid,\n  List,\n  ListItem,\n  Avatar,\n  Divider,\n  ListItemText,\n  ListItemIcon,\n} from '@material-ui/core';\nimport NewConversation from '../../containers/chat/NewConversation';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nconst useStyles = makeStyles({\n  textColor: {\n    color:\"white\",\n    fontSize:100\n  },\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid white',\n    backgroundColor: '#4A154B',\n    borderRadius:10,\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationsComp = ({ conversations, auth, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid item xs={2} className={classes.borderRight500}>\n        {/* user */}\n        <List>\n          <ListItem button key='RemySharp'>\n            <ListItemIcon>\n              <Avatar\n                alt='Remy Sharp'\n                src='https://material-ui.com/static/images/avatar/1.jpg'\n              />\n            </ListItemIcon>\n            <ListItemText className={classes.textColor} primary={auth.user.username}></ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        {/* search bar  */}\n        <Grid container spacing={2}>\n        <NewConversation/>\n        </Grid>\n        <Divider />\n\n        {/* conversations */}\n        {!conversations && (\n          <center>\n          </center>\n        )}\n\n        <List>\n          {console.log(conversations, 'j')}\n          {conversations.map(conversation => {\n            conversation.recipients = conversation.recipients.filter(\n              recipient => recipient._id !== auth.user._id\n            );\n          })}\n          {conversations.length > 0 ? (\n            conversations.map(conversation => (\n            \n                <ListItem button onClick={()=>{onClick(conversation)}} >\n                  {/* <ListItemIcon>\n                    <Avatar\n                      alt='Remy Sharp'\n                      src='https://material-ui.com/static/images/avatar/1.jpg'\n                    />\n                  </ListItemIcon> */}\n                  <ListItemText className={classes.textColor}>\n                    {conversation.recipients[0].name}\n                  </ListItemText>\n                  <ListItemText  align='right'><FiberManualRecordIcon style={{ fontSize: 20, color: green[500] }}/></ListItemText>\n                </ListItem>\n\n            ))\n          ) : (\n            <h4>No conversations found...</h4>\n          )}\n        </List>\n      </Grid>\n    </Fragment>\n  );\n};\n\nConversationsComp.propTypes = {};\n\nexport default ConversationsComp;\n\n//  <ListItem button key='Alice'>\n\n/* <ListItemIcon>\n<Avatar\n  alt='Alice'\n  src='https://material-ui.com/static/images/avatar/3.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Alice'>Alice</ListItemText>\n</ListItem>\n<ListItem button key='CindyBaker'>\n<ListItemIcon>\n<Avatar\n  alt='Cindy Baker'\n  src='https://material-ui.com/static/images/avatar/2.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n</ListItem> */\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js",["151","152"],"import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from 'moment'\nimport Typography from \"@material-ui/core/Typography\";\n\nimport {\n  Grid,\n  List,\n  ListItem,\n  Divider,\n  ListItemText,\n  TextField,\n  Fab,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: \"100%\",\n    height: \"80vh\",\n  },\n  headBG: {\n    backgroundColor: \"#e0e0e0\",\n  },\n  borderRight500: {\n    borderRight: \"1px solid #e0e0e0\",\n\n    backgroundColor: \"#0000e0\",\n  },\n  messageArea: {\n    height: \"70vh\",\n    overflowY: \"auto\",\n  },\n});\n\nconst ConversationWindowComp = ({\n  events,\n  conversation,\n  onChange,\n  onSubmit,\n  formData,\n}) => {\n  const classes = useStyles();\n  const { text } = formData;\n  if (conversation) {\n    return (\n      <Fragment>\n        <Grid item xs={8}>\n          <List className={classes.messageArea}>\n            {events.map((event) => (\n              <Grid item xs={12}>\n                <ListItemText><Typography gutterBottom variant=\"h7\" component=\"h3\">\n                  {event.sender}</Typography>\n                  <Typography gutterBottom variant=\"h8\" >{moment(event.date).format('LT')}</Typography>\n                \n                </ListItemText>\n                <Typography gutterBottom variant=\"h7\">\n                  {event.text}\n                </Typography>\n              </Grid>\n            ))}\n            {/* <ListItem key='1'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='right'\n                    primary=\"Hey man, What's up ?\"\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='right' secondary='09:30'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem> */}\n            {/* <ListItem key='2'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='left'\n                    primary='Hey, Iam Good! What about you ?'\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='left' secondary='09:31'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem> */}\n            {/* <ListItem key='3'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='right'\n                    primary=\"Cool. i am good, let's catch up!\"\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='right' secondary='10:30'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem> */}\n          </List>\n          <Divider />\n          <Grid container style={{ padding: \"10px\" }}>\n            <Grid item xs={11}>\n              <TextField\n                id=\"outlined-basic-email\"\n                label=\"Type Something\"\n                fullWidth\n                value={text}\n                onChange={onChange}\n              ></TextField>\n            </Grid>\n            <Grid xs={1} align=\"right\">\n              <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                onClick={() => {\n                  onSubmit();\n                }}\n              >\n                <SendIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    return <Fragment> No Conversation Selected </Fragment>;\n  }\n};\n\nConversationWindowComp.propTypes = {};\n\nexport default ConversationWindowComp;\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/RegisterComp.js",[],{"ruleId":"153","replacedBy":"154"},{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","severity":1,"message":"158","line":3,"column":10,"nodeType":"159","messageId":"160","endLine":3,"endColumn":14},{"ruleId":"157","severity":1,"message":"161","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":17},{"ruleId":"162","severity":1,"message":"163","line":17,"column":6,"nodeType":"164","endLine":17,"endColumn":8,"suggestions":"165"},{"ruleId":"162","severity":1,"message":"166","line":26,"column":6,"nodeType":"164","endLine":26,"endColumn":32,"suggestions":"167"},{"ruleId":"162","severity":1,"message":"168","line":39,"column":6,"nodeType":"164","endLine":39,"endColumn":25,"suggestions":"169"},{"ruleId":"162","severity":1,"message":"170","line":45,"column":6,"nodeType":"164","endLine":45,"endColumn":8,"suggestions":"171"},{"ruleId":"157","severity":1,"message":"172","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"157","severity":1,"message":"173","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":18},{"ruleId":"157","severity":1,"message":"161","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"161","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"174","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":14},{"ruleId":"157","severity":1,"message":"175","line":22,"column":13,"nodeType":"159","messageId":"160","endLine":22,"endColumn":17},{"ruleId":"157","severity":1,"message":"176","line":22,"column":19,"nodeType":"159","messageId":"160","endLine":22,"endColumn":29},{"ruleId":"177","severity":1,"message":"178","line":69,"column":5,"nodeType":"179","messageId":"180","endLine":75,"endColumn":6},{"ruleId":"177","severity":1,"message":"181","line":90,"column":5,"nodeType":"179","messageId":"182","endLine":91,"endColumn":20},{"ruleId":"157","severity":1,"message":"183","line":11,"column":9,"nodeType":"159","messageId":"160","endLine":11,"endColumn":16},{"ruleId":"153","replacedBy":"184"},{"ruleId":"155","replacedBy":"185"},{"ruleId":"186","severity":1,"message":"187","line":75,"column":43,"nodeType":"188","messageId":"189","endLine":75,"endColumn":45},{"ruleId":"157","severity":1,"message":"161","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":17},{"ruleId":"157","severity":1,"message":"190","line":10,"column":3,"nodeType":"159","messageId":"160","endLine":10,"endColumn":11},"no-native-reassign",["191"],"no-negated-in-lhs",["192"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["193"],"React Hook useEffect has missing dependencies: 'conversations' and 'username'. Either include them or remove the dependency array.",["194"],"React Hook useEffect has missing dependencies: 'addEvent' and 'chat'. Either include them or remove the dependency array. If 'addEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["195"],"React Hook useEffect has a missing dependency: 'addConversation'. Either include it or remove the dependency array. If 'addConversation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["196"],"'setAlert' is defined but never used.","'Typography' is defined but never used.","'socket' is defined but never used.","'text' is assigned a value but never used.","'chatRoomId' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'classes' is assigned a value but never used.",["191"],["192"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'ListItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"197","fix":"198"},{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"Update the dependencies array to be: [getConversations]",{"range":"205","text":"206"},"Update the dependencies array to be: [auth, chat.conversations, conversations, username]",{"range":"207","text":"208"},"Update the dependencies array to be: [addEvent, chat, chat.conversation]",{"range":"209","text":"210"},"Update the dependencies array to be: [addConversation]",{"range":"211","text":"212"},[515,517],"[getConversations]",[756,782],"[auth, chat.conversations, conversations, username]",[1139,1158],"[addEvent, chat, chat.conversation]",[1329,1331],"[addConversation]"]
=======
[{"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js":"1","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js":"2","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js":"3","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js":"4","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js":"5","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js":"6","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js":"7","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js":"8","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js":"9","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js":"10","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js":"11","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js":"12","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js":"13","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js":"14","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js":"15","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js":"16","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js":"17","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/RegisterComp.js":"18","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js":"19","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js":"20","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js":"21","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js":"22","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js":"23","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js":"24","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js":"25","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js":"26","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js":"27","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js":"28","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js":"29"},{"size":412,"mtime":1611561004938,"results":"30","hashOfConfig":"31"},{"size":1757,"mtime":1613833581344,"results":"32","hashOfConfig":"31"},{"size":1020,"mtime":1611559052277,"results":"33","hashOfConfig":"31"},{"size":326,"mtime":1613656848213,"results":"34","hashOfConfig":"31"},{"size":1860,"mtime":1614061256886,"results":"35","hashOfConfig":"31"},{"size":1331,"mtime":1611567974929,"results":"36","hashOfConfig":"31"},{"size":439,"mtime":1611568033707,"results":"37","hashOfConfig":"31"},{"size":702,"mtime":1613656958392,"results":"38","hashOfConfig":"31"},{"size":980,"mtime":1613717137960,"results":"39","hashOfConfig":"31"},{"size":1099,"mtime":1613833581344,"results":"40","hashOfConfig":"31"},{"size":1552,"mtime":1614061268754,"results":"41","hashOfConfig":"31"},{"size":1526,"mtime":1614056725935,"results":"42","hashOfConfig":"31"},{"size":1567,"mtime":1614073401935,"results":"43","hashOfConfig":"31"},{"size":344,"mtime":1611560345132,"results":"44","hashOfConfig":"31"},{"size":232,"mtime":1614062632598,"results":"45","hashOfConfig":"31"},{"size":3038,"mtime":1614072469770,"results":"46","hashOfConfig":"31"},{"size":3576,"mtime":1614056725935,"results":"47","hashOfConfig":"31"},{"size":4669,"mtime":1614056725935,"results":"48","hashOfConfig":"31"},{"size":1308,"mtime":1614056725935,"results":"49","hashOfConfig":"31"},{"size":188,"mtime":1613676975123,"results":"50","hashOfConfig":"31"},{"size":752,"mtime":1613841375146,"results":"51","hashOfConfig":"31"},{"size":1834,"mtime":1614079424387,"results":"52","hashOfConfig":"31"},{"size":402,"mtime":1611560521952,"results":"53","hashOfConfig":"31"},{"size":1079,"mtime":1613838416226,"results":"54","hashOfConfig":"31"},{"size":2522,"mtime":1614078312589,"results":"55","hashOfConfig":"31"},{"size":3237,"mtime":1614074927642,"results":"56","hashOfConfig":"31"},{"size":7770,"mtime":1614080145394,"results":"57","hashOfConfig":"31"},{"size":919,"mtime":1614056725935,"results":"58","hashOfConfig":"31"},{"size":1266,"mtime":1614056725935,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vfk2tk",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js",[],["126","127"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js",["128"],"// import api from '../utils/api';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\n\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_CHAT,\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n   \n    if(localStorage.token){\n      setAuthToken(localStorage.token)\n  }\n const res = await axios.get('/api/auth');\n   \n    console.log('load_user()', res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/user', formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (body) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  \n\n  try {\n    console.log('hi')\n    const res = await axios.post('/api/auth', body, config);\n\n    // const res={data:'hi'}\n    console.log(res.data)\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    \n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => ({ type:CLEAR_CHAT, type: LOGOUT });\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js",["129"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport RegisterComp from \"../../components/auth/RegisterComp\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    username:'',\n    email: '',\n    password: '',\n    password2: '',\n\n  });\n\n  const { name,username, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name,username, email, password});\n      console.log('fjhdjh');\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/chat' />;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"\">\n        <RegisterComp\n          onChange={onChange}\n          onSubmit={onSubmit}\n          formData={formData}\n        />\n      </div>\n    </Fragment>\n\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  \n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register})(Register);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js",["130","131","132","133","134"],"import React, { useEffect } from \"react\";\nimport ChatComp from \"../../components/chat/ChatComp\";\nimport {\n  getConversations,\n  addConversation,\n  addEvent,\n} from \"../../actions/chat\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport socket from \"../../socketConfig\";\n\nconst Chat = ({ getConversations, addConversation, auth, chat, addEvent }) => {\n  const username = auth.user.username;\n  const conversations = chat.conversations;\n  useEffect(() => {\n    getConversations();\n  }, []);\n  useEffect(() => {\n    if (auth.user.username !== undefined && conversations.length > 0) {\n      socket.emit(\"join\", { username, conversations }, (error) => {\n        if (error) {\n          alert(error);\n        }\n      });\n    }\n  }, [auth, chat.conversations]);\n\n  useEffect(() => {\n    socket.on(\"newEvent\", ({ event }) => {\n      console.log(event, \"socket newMessage\");\n      console.log(event._id, \"eventid\");\n     console.log(chat,'hey man comonnnnn')\n      if (chat.conversation && chat.conversation._id === event.chatRoomId) {\n        addEvent(event);\n      } else {\n        //send notification of new event\n      }\n    });\n  }, [chat.conversation]);\n  useEffect(() => {\n    socket.on(\"newConversation\", ({ newConvo }) => {\n      console.log(newConvo, \"new conversation\");\n      addConversation(newConvo);\n    });\n  }, []);\n  return <ChatComp />;\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  chat: state.chat,\n});\n\nexport default connect(mapStateToProps, {\n  getConversations,\n  addConversation,\n  addEvent,\n})(Chat);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js",["135"],"// import api from '../utils/api';\nimport axios from 'axios';\n\nimport { setAlert } from './alert';\nimport {\n  GET_CONVERSATIONS,\n  GET_CONVERSATIONS_ERROR,\n  NEW_CONVERSATION,\n  NEW_CONVERSATION_ERROR,\n  SET_CONVERSATION,\n  SET_CONVERSATION_ERROR,\n  GET_EVENTS,\n  GET_EVENTS_ERROR,\n  NEW_EVENT,\n  NEW_EVENT_ERROR,\n  ADD_CONVERSATION,\n  ADD_CONVERSATION_ERROR,\n  ADD_EVENT_ERROR,\n  ADD_EVENT\n} from './types';\n\n// Load User\nexport const getConversations = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/user/conversations');\n    console.log('load_user()', res.data);\n    dispatch({\n      type: GET_CONVERSATIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: GET_CONVERSATIONS_ERROR,\n    });\n  }\n};\n\nexport const newConversation = body => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/user/newConversation', body, config);\n\n    console.log('load_user()', res.data);\n    dispatch({\n      type: NEW_CONVERSATION,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: NEW_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const setConversation = conversation => async dispatch => {\n  try {\n    dispatch({\n      type: SET_CONVERSATION,\n      payload: conversation,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SET_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const getEvents = chatId => async dispatch => {\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  const timestamp = null;\n  const body = { chatRoomId: chatId, timestamp: timestamp };\n  console.log(body);\n\n  try {\n\n    const res = await axios.post('/api/event/getEvents', body, config);\n    console.log(res.data)\n    dispatch({  \n      type: GET_EVENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: GET_EVENTS_ERROR,\n    });\n  }\n};\n\nexport const newEvent = body => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  console.log(body,\"In newEvent jiiiiiiiiiiii\")\n  try {\n    const res= await axios.post('/api/event/newEvent', body, config);\n    //socket event\n\n    dispatch({\n      type: NEW_EVENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: NEW_EVENT_ERROR,\n    });\n  }\n};\n\nexport const addConversation = body => async dispatch => {\n  console.log('In add Conversation ')\n  try {\n    dispatch({\n      type: ADD_CONVERSATION,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_CONVERSATION_ERROR,\n    });\n  }\n};\nexport const addEvent = body => async dispatch => {\n  \n  try {\n    dispatch({\n      type: ADD_EVENT,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_EVENT_ERROR,\n    });\n  }\n};\n\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/RegisterComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js",["136"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            {/* <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid> */}\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        \n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js",["137"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationsComp from '../../components/chat/ConversationsComp';\nimport { connect } from 'react-redux';\nimport { setConversation, getEvents } from '../../actions/chat';\nfunction Conversations({ chat, auth, setConversation, getEvents }) {\n  const onClick = conversation => {\n    setConversation(conversation);\n    getEvents(conversation._id);\n  };\n  return (\n    <ConversationsComp\n      conversations={chat.conversations}\n      auth={auth}\n      onClick={onClick}\n    />\n  );\n}\n\nConversations.propTypes = {};\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { setConversation, getEvents })(\n  Conversations\n);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js",["138","139","140","141"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js",["142","143"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js",["144"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid } from \"@material-ui/core\";\nconst useStyles = makeStyles({});\nconst NewConversationComp = ({ formData, onChange, onSubmit }) => {\n  const { username } = formData;\n  const classes = useStyles();\n\n  return (\n    <div>\n      <form noValidate onSubmit={onSubmit}>\n        <Grid item xs={12} style={{ padding: \"10px\",color:\"white\" }}>\n          <TextField\n            name=\"username\"\n            id=\"outlined-basic-email\"\n            label=\"Search\"\n            variant=\"outlined\"\n            fullWidth\n            value={username}\n            onChange={onChange}\n            color=\"white\"\n          />\n        </Grid>\n        <Grid item xs={12} style={{ padding: \"10px\" }}>\n          \n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              value=\"Register\"\n            ><SearchIcon/></Button>\n          \n        </Grid>\n      </form>\n    </div>\n  );\n};\n\nNewConversationComp.propTypes = {};\n\nexport default NewConversationComp;\n",{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":98,"column":49,"nodeType":"151","messageId":"152","endLine":98,"endColumn":53},{"ruleId":"153","severity":1,"message":"154","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"157","line":9,"column":8,"nodeType":"155","messageId":"156","endLine":9,"endColumn":17},{"ruleId":"158","severity":1,"message":"159","line":17,"column":6,"nodeType":"160","endLine":17,"endColumn":8,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":26,"column":6,"nodeType":"160","endLine":26,"endColumn":32,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"164","line":39,"column":6,"nodeType":"160","endLine":39,"endColumn":25,"suggestions":"165"},{"ruleId":"158","severity":1,"message":"166","line":45,"column":6,"nodeType":"160","endLine":45,"endColumn":8,"suggestions":"167"},{"ruleId":"153","severity":1,"message":"168","line":4,"column":10,"nodeType":"155","messageId":"156","endLine":4,"endColumn":18},{"ruleId":"153","severity":1,"message":"169","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":18},{"ruleId":"153","severity":1,"message":"157","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"170","line":6,"column":8,"nodeType":"155","messageId":"156","endLine":6,"endColumn":14},{"ruleId":"153","severity":1,"message":"171","line":22,"column":13,"nodeType":"155","messageId":"156","endLine":22,"endColumn":17},{"ruleId":"153","severity":1,"message":"172","line":22,"column":19,"nodeType":"155","messageId":"156","endLine":22,"endColumn":29},{"ruleId":"153","severity":1,"message":"157","line":2,"column":8,"nodeType":"155","messageId":"156","endLine":2,"endColumn":17},{"ruleId":"153","severity":1,"message":"173","line":10,"column":3,"nodeType":"155","messageId":"156","endLine":10,"endColumn":11},{"ruleId":"153","severity":1,"message":"174","line":11,"column":9,"nodeType":"155","messageId":"156","endLine":11,"endColumn":16},"no-native-reassign",["175"],"no-negated-in-lhs",["176"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["177"],"React Hook useEffect has missing dependencies: 'conversations' and 'username'. Either include them or remove the dependency array.",["178"],"React Hook useEffect has missing dependencies: 'addEvent' and 'chat'. Either include them or remove the dependency array. If 'addEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["179"],"React Hook useEffect has a missing dependency: 'addConversation'. Either include it or remove the dependency array. If 'addConversation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["180"],"'setAlert' is defined but never used.","'Typography' is defined but never used.","'socket' is defined but never used.","'text' is assigned a value but never used.","'chatRoomId' is assigned a value but never used.","'ListItem' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [getConversations]",{"range":"189","text":"190"},"Update the dependencies array to be: [auth, chat.conversations, conversations, username]",{"range":"191","text":"192"},"Update the dependencies array to be: [addEvent, chat, chat.conversation]",{"range":"193","text":"194"},"Update the dependencies array to be: [addConversation]",{"range":"195","text":"196"},[515,517],"[getConversations]",[756,782],"[auth, chat.conversations, conversations, username]",[1159,1178],"[addEvent, chat, chat.conversation]",[1349,1351],"[addConversation]"]
>>>>>>> e1c98a50985b5965f653b66fb7aaac0166fcc775
