[{"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js":"1","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js":"2","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js":"3","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js":"4","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js":"5","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js":"6","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js":"7","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js":"8","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js":"9","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js":"10","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js":"11","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js":"12","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js":"13","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js":"14","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js":"15","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js":"16","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js":"17","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js":"18","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js":"19","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js":"20","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js":"21","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js":"22","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js":"23","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js":"24","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js":"25","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js":"26","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js":"27"},{"size":412,"mtime":1613729091926,"results":"28","hashOfConfig":"29"},{"size":1757,"mtime":1613759066387,"results":"30","hashOfConfig":"29"},{"size":1020,"mtime":1613729091926,"results":"31","hashOfConfig":"29"},{"size":1867,"mtime":1613808208648,"results":"32","hashOfConfig":"29"},{"size":1486,"mtime":1613759066379,"results":"33","hashOfConfig":"29"},{"size":326,"mtime":1613729091926,"results":"34","hashOfConfig":"29"},{"size":439,"mtime":1613729091922,"results":"35","hashOfConfig":"29"},{"size":1331,"mtime":1613729091922,"results":"36","hashOfConfig":"29"},{"size":1099,"mtime":1613760987000,"results":"37","hashOfConfig":"29"},{"size":980,"mtime":1613759066383,"results":"38","hashOfConfig":"29"},{"size":702,"mtime":1613729091922,"results":"39","hashOfConfig":"29"},{"size":930,"mtime":1613827235357,"results":"40","hashOfConfig":"29"},{"size":2942,"mtime":1613759066383,"results":"41","hashOfConfig":"29"},{"size":344,"mtime":1613729091922,"results":"42","hashOfConfig":"29"},{"size":1112,"mtime":1613759066379,"results":"43","hashOfConfig":"29"},{"size":1301,"mtime":1613759066379,"results":"44","hashOfConfig":"29"},{"size":1439,"mtime":1613759066383,"results":"45","hashOfConfig":"29"},{"size":188,"mtime":1613759066383,"results":"46","hashOfConfig":"29"},{"size":509,"mtime":1613759285036,"results":"47","hashOfConfig":"29"},{"size":976,"mtime":1613827382145,"results":"48","hashOfConfig":"29"},{"size":332,"mtime":1613759066383,"results":"49","hashOfConfig":"29"},{"size":402,"mtime":1613729091926,"results":"50","hashOfConfig":"29"},{"size":1273,"mtime":1613729091926,"results":"51","hashOfConfig":"29"},{"size":718,"mtime":1613759066383,"results":"52","hashOfConfig":"29"},{"size":3170,"mtime":1613759066383,"results":"53","hashOfConfig":"29"},{"size":1378,"mtime":1613759066383,"results":"54","hashOfConfig":"29"},{"size":2667,"mtime":1613759066383,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"fjuild",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js",[],["119","120"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js",["121"],"// import api from '../utils/api';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\n\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n   \n    if(localStorage.token){\n      setAuthToken(localStorage.token)\n  }\n const res = await axios.get('/api/auth');\n   \n    console.log('load_user()', res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/user', formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (body) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  \n\n  try {\n    console.log('hi')\n    const res = await axios.post('/api/auth', body, config);\n\n    // const res={data:'hi'}\n    console.log(res.data)\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    \n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => ({ type: CLEAR_PROFILE, type: LOGOUT });\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js",["122","123","124"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js",["125"],"// import api from '../utils/api';\nimport axios from 'axios';\n\nimport { setAlert } from './alert';\nimport {\n    GET_CONVERSATIONS,\n    GET_CONVERSATIONS_ERROR,\n    NEW_CONVERSATION,\n    NEW_CONVERSATION_ERROR\n} from './types';\n\n// Load User\nexport const getConversations = () => async dispatch => {\n  \n\n   try{\n    const res = await axios.get('/api/user/conversations');\n    console.log('load_user()', res.data);\n    dispatch({\n      type: GET_CONVERSATIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: GET_CONVERSATIONS_ERROR,\n    });\n  }\n};\n\nexport const newConversation = (body) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  \n    try{\n      const res = await axios.post('/api/user/newConversation',body,config);\n      \n     console.log('load_user()', res.data);\n     dispatch({\n       type: NEW_CONVERSATION,\n       payload: res.data,\n     });\n   } catch (err) {\n     console.log('Load_use()', err);\n     dispatch({\n       type: NEW_CONVERSATION_ERROR,\n     });\n   }\n };\n ","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js",["126"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\nimport NewConversation from '../../containers/chat/NewConversation';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid>\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        <NewConversation></NewConversation>\n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js",["127"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport ConversationsComp from '../../components/chat/ConversationsComp'\nimport { connect } from 'react-redux';\n\nfunction Conversations({chat,auth}) {\n    return (\n        <ConversationsComp conversations={chat.conversations} auth={auth}></ConversationsComp>\n    )\n}\n\nConversations.propTypes = {\n\n}\nconst mapStateToProps = state => ({\n    chat: state.chat,\n    auth: state.auth,\n  });\n  export default connect(mapStateToProps,null)(Conversations);\n\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js",["128"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js",["129"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport ConversationWindowComp from '../../components/chat/ConversationWindowComp'\n\nfunction ConversationWindow(props) {\n    return (\n       <ConversationWindowComp></ConversationWindowComp>\n    )\n}\n\nConversationWindow.propTypes = {\n\n}\n\nexport default ConversationWindow\n\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js",["130","131"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  Avatar,\n  Divider,\n  ListItemText,\n  TextField,\n  ListItemIcon,\n} from '@material-ui/core';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n\n    backgroundColor: 'lightGrey',\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationsComp = ({ conversations, auth }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid item xs={2} className={classes.borderRight500}>\n        {/* user */}\n        <List>\n          <ListItem button key='RemySharp'>\n            <ListItemIcon>\n              <Avatar\n                alt='Remy Sharp'\n                src='https://material-ui.com/static/images/avatar/1.jpg'\n              />\n            </ListItemIcon>\n            <ListItemText primary='John Wick'></ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        {/* search bar  */}\n        <Grid item xs={12} style={{ padding: '10px' }}>\n          <TextField\n            id='outlined-basic-email'\n            label='Search'\n            variant='outlined'\n            fullWidth\n          />\n        </Grid>\n        <Divider />\n        {/* conversations */}\n        {!conversations && (\n          <center>\n            <span> No Active Conversation </span>\n          </center>\n        )}\n\n        <List>\n          {console.log(conversations, 'j')}\n          {\n            conversations.map((conversation)=>{\n              conversation.recipients = conversation.recipients.filter((recipient)=>recipient._id!==auth.user._id)\n            })\n          }\n          {conversations.length > 0 ? (\n            conversations.map(conversation => (\n              <ListItem button key={conversation._id}>\n                <ListItemIcon>\n                  <Avatar\n                    alt='Remy Sharp'\n                    src='https://material-ui.com/static/images/avatar/1.jpg'\n                  />\n                </ListItemIcon>\n                <ListItemText primary={conversation.recipients[0].name}>\n                  {conversation.recipients[0].name}\n                </ListItemText>\n                <ListItemText secondary='online' align='right'></ListItemText>\n              </ListItem>\n            ))\n          ) : (\n            <h4>No conversations found...</h4>\n          )}\n        </List>\n      </Grid>\n    </Fragment>\n  );\n};\n\nConversationsComp.propTypes = {};\n\nexport default ConversationsComp;\n\n//  <ListItem button key='Alice'>\n\n/* <ListItemIcon>\n<Avatar\n  alt='Alice'\n  src='https://material-ui.com/static/images/avatar/3.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Alice'>Alice</ListItemText>\n</ListItem>\n<ListItem button key='CindyBaker'>\n<ListItemIcon>\n<Avatar\n  alt='Cindy Baker'\n  src='https://material-ui.com/static/images/avatar/2.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n</ListItem> */\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js",["132","133","134","135","136","137","138","139"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Grid,\n    List,\n    ListItem,\n    Avatar,\n    Divider,\n    ListItemText,\n    TextField,\n    ListItemIcon,\n  } from '@material-ui/core';\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh',\n    },\n    headBG: {\n      backgroundColor: '#e0e0e0',\n    },\n    borderRight500: {\n      borderRight: '1px solid #e0e0e0',\n  \n      backgroundColor: 'lightGrey',\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto',\n    },\n  });\nconst NewConversationComp = ({ formData, onChange, onSubmit }) => {\n  const { username } = formData;\n  const classes = useStyles();\n\n  return (\n    <div>\n        <Grid item xs={1} className={classes.borderRight500}>\n      <h3>Converastions</h3>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='username'\n            placeholder='Username'\n            name='username'\n            value={username}\n            onChange={onChange}\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='login' />\n      </form>\n      </Grid>\n    </div>\n  );\n};\n\nNewConversationComp.propTypes = {};\n\nexport default NewConversationComp;\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js",["140"],"import React,{Fragment} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Grid,List,ListItem,Divider,ListItemText,TextField,Fab} from '@material-ui/core'\nimport SendIcon from '@material-ui/icons/Send';\n\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n\n    backgroundColor: '#0000e0',\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationWindowComp = props => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid item xs={8}>\n        <List className={classes.messageArea}>\n          <ListItem key='1'>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText\n                  align='right'\n                  primary=\"Hey man, What's up ?\"\n                ></ListItemText>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItemText align='right' secondary='09:30'></ListItemText>\n              </Grid>\n            </Grid>\n          </ListItem>\n          <ListItem key='2'>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText\n                  align='left'\n                  primary='Hey, Iam Good! What about you ?'\n                ></ListItemText>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItemText align='left' secondary='09:31'></ListItemText>\n              </Grid>\n            </Grid>\n          </ListItem>\n          <ListItem key='3'>\n            <Grid container>\n              <Grid item xs={12}>\n                <ListItemText\n                  align='right'\n                  primary=\"Cool. i am good, let's catch up!\"\n                ></ListItemText>\n              </Grid>\n              <Grid item xs={12}>\n                <ListItemText align='right' secondary='10:30'></ListItemText>\n              </Grid>\n            </Grid>\n          </ListItem>\n        </List>\n        <Divider />\n        <Grid container style={{ padding: '20px' }}>\n          <Grid item xs={11}>\n            <TextField\n              id='outlined-basic-email'\n              label='Type Something'\n              fullWidth\n            />\n          </Grid>\n          <Grid xs={1} align='right'>\n            <Fab color='primary' aria-label='add'>\n              <SendIcon />\n            </Fab>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nConversationWindowComp.propTypes = {};\n\nexport default ConversationWindowComp;\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":98,"column":53,"nodeType":"147","messageId":"148","endLine":98,"endColumn":57},{"ruleId":"149","severity":1,"message":"150","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":17},{"ruleId":"153","severity":1,"message":"154","line":15,"column":6,"nodeType":"155","endLine":15,"endColumn":8,"suggestions":"156"},{"ruleId":"153","severity":1,"message":"157","line":27,"column":6,"nodeType":"155","endLine":27,"endColumn":22,"suggestions":"158"},{"ruleId":"149","severity":1,"message":"159","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":75,"column":45,"nodeType":"162","messageId":"163","endLine":75,"endColumn":47},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},{"ruleId":"149","severity":1,"message":"164","line":7,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":9},{"ruleId":"149","severity":1,"message":"165","line":8,"column":5,"nodeType":"151","messageId":"152","endLine":8,"endColumn":13},{"ruleId":"149","severity":1,"message":"166","line":9,"column":5,"nodeType":"151","messageId":"152","endLine":9,"endColumn":11},{"ruleId":"149","severity":1,"message":"167","line":10,"column":5,"nodeType":"151","messageId":"152","endLine":10,"endColumn":12},{"ruleId":"149","severity":1,"message":"168","line":11,"column":5,"nodeType":"151","messageId":"152","endLine":11,"endColumn":17},{"ruleId":"149","severity":1,"message":"169","line":12,"column":5,"nodeType":"151","messageId":"152","endLine":12,"endColumn":14},{"ruleId":"149","severity":1,"message":"170","line":13,"column":5,"nodeType":"151","messageId":"152","endLine":13,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":2,"column":8,"nodeType":"151","messageId":"152","endLine":2,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["173"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array. Outer scope values like 'ENDPOINT' aren't valid dependencies because mutating them doesn't re-render the component.",["174"],"'setAlert' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'List' is defined but never used.","'ListItem' is defined but never used.","'Avatar' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'TextField' is defined but never used.","'ListItemIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},"Update the dependencies array to be: [getConversations]",{"range":"179","text":"180"},"Update the dependencies array to be: [auth, username]",{"range":"181","text":"182"},[453,455],"[getConversations]",[752,768],"[auth, username]"]