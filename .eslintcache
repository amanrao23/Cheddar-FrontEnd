[{"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js":"1","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js":"2","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js":"3","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js":"4","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js":"5","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js":"6","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js":"7","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js":"8","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js":"9","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js":"10","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js":"11","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js":"12","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js":"13","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js":"14","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js":"15","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js":"16","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js":"17","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js":"18","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js":"19","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js":"20","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js":"21","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js":"22","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js":"23","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js":"24","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js":"25","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js":"26","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js":"27","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js":"28"},{"size":412,"mtime":1611561004938,"results":"29","hashOfConfig":"30"},{"size":1757,"mtime":1613833581344,"results":"31","hashOfConfig":"30"},{"size":1020,"mtime":1611559052277,"results":"32","hashOfConfig":"30"},{"size":1504,"mtime":1613838376436,"results":"33","hashOfConfig":"30"},{"size":326,"mtime":1613656848213,"results":"34","hashOfConfig":"30"},{"size":439,"mtime":1611568033707,"results":"35","hashOfConfig":"30"},{"size":1331,"mtime":1611567974929,"results":"36","hashOfConfig":"30"},{"size":980,"mtime":1613717137960,"results":"37","hashOfConfig":"30"},{"size":702,"mtime":1613656958392,"results":"38","hashOfConfig":"30"},{"size":1830,"mtime":1613837256265,"results":"39","hashOfConfig":"30"},{"size":2942,"mtime":1613672110664,"results":"40","hashOfConfig":"30"},{"size":1099,"mtime":1613833581344,"results":"41","hashOfConfig":"30"},{"size":1024,"mtime":1613833581344,"results":"42","hashOfConfig":"30"},{"size":344,"mtime":1611560345132,"results":"43","hashOfConfig":"30"},{"size":1811,"mtime":1613838537714,"results":"44","hashOfConfig":"30"},{"size":188,"mtime":1613833581344,"results":"45","hashOfConfig":"30"},{"size":1439,"mtime":1613717570946,"results":"46","hashOfConfig":"30"},{"size":1301,"mtime":1613672088156,"results":"47","hashOfConfig":"30"},{"size":188,"mtime":1613676975123,"results":"48","hashOfConfig":"30"},{"size":976,"mtime":1613836405317,"results":"49","hashOfConfig":"30"},{"size":736,"mtime":1613838256522,"results":"50","hashOfConfig":"30"},{"size":524,"mtime":1613837968040,"results":"51","hashOfConfig":"30"},{"size":402,"mtime":1611560521952,"results":"52","hashOfConfig":"30"},{"size":1079,"mtime":1613838416226,"results":"53","hashOfConfig":"30"},{"size":1059,"mtime":1613838652765,"results":"54","hashOfConfig":"30"},{"size":1378,"mtime":1613717726566,"results":"55","hashOfConfig":"30"},{"size":2784,"mtime":1613838091061,"results":"56","hashOfConfig":"30"},{"size":3257,"mtime":1613837797419,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"1vfk2tk",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js",[],["120","121"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js",["122","123","124"],"import React, { useEffect } from \"react\";\nimport ChatComp from \"../../components/chat/ChatComp\";\nimport { getConversations } from \"../../actions/chat\";\nimport { connect } from \"react-redux\";\n// import io from \"socket.io-client\";\nimport PropTypes from \"prop-types\";\nimport socket from \"../../socketConfig\"\n// const ENDPOINT = \"http://localhost:5000\";\n\n// let socket;\nconst Chat = ({ getConversations, auth, chat }) => {\n  const username = auth.user.username;\n  const conversations = chat.conversations;\n  useEffect(() => {\n    getConversations();\n  }, []);\n  useEffect(() => {\n    // socket = io(ENDPOINT, { transports: [\"websocket\", \"polling\"] });\n\n    if (auth.user.username !== undefined) {\n      socket.emit(\"join\", { username,conversations }, (error) => {\n        if (error) {\n          alert(error);\n        }\n      });\n    }\n  }, [auth]);\n  return <ChatComp />;\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  chat: state.chat,\n});\n\nexport default connect(mapStateToProps, { getConversations })(Chat);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js",["125"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js",["126"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\nimport NewConversation from '../../containers/chat/NewConversation';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid>\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        <NewConversation></NewConversation>\n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js",["127"],"import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport NewConversationComp from '../../components/chat/NewConversationComp';\nimport { connect } from 'react-redux';\nimport { newConversation } from '../../actions/chat';\n\nconst NewConversation = ({ newConversation, auth, chat }) => {\n  const [formData, setFormData] = useState({\n    username: '',\n  });\n\n  const { username } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    newConversation({ username });\n    setFormData({ username:'' });\n\n  };\n\n  return (\n    <NewConversationComp\n      formData={formData}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    ></NewConversationComp>\n  );\n};\n\nNewConversation.propTypes = {};\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, {newConversation})(NewConversation);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js",["128"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js",["129"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js",["130","131","132","133","134","135","136","137"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Grid,\n    List,\n    ListItem,\n    Avatar,\n    Divider,\n    ListItemText,\n    TextField,\n    ListItemIcon,\n  } from '@material-ui/core';\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh',\n    },\n    headBG: {\n      backgroundColor: '#e0e0e0',\n    },\n    borderRight500: {\n      borderRight: '1px solid #e0e0e0',\n  \n      backgroundColor: 'lightGrey',\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto',\n    },\n  });\nconst NewConversationComp = ({ formData, onChange, onSubmit }) => {\n  const { username } = formData;\n  const classes = useStyles();\n\n  return (\n    <div>\n        <Grid item xs={1} className={classes.borderRight500}>\n      <h3>Converastions</h3>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='username'\n            placeholder='Username'\n            name='username'\n            value={username}\n            onChange={onChange}\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='login' />\n      </form>\n      </Grid>\n    </div>\n  );\n};\n\nNewConversationComp.propTypes = {};\n\nexport default NewConversationComp;\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js",["138"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js",["139","140"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  Avatar,\n  Divider,\n  ListItemText,\n  TextField,\n  ListItemIcon,\n} from '@material-ui/core';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n\n    backgroundColor: 'lightGrey',\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationsComp = ({ conversations, auth, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid item xs={2} className={classes.borderRight500}>\n        {/* user */}\n        <List>\n          <ListItem button key='RemySharp'>\n            <ListItemIcon>\n              <Avatar\n                alt='Remy Sharp'\n                src='https://material-ui.com/static/images/avatar/1.jpg'\n              />\n            </ListItemIcon>\n            <ListItemText primary='John Wick'></ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        {/* search bar  */}\n        <Grid item xs={12} style={{ padding: '10px' }}>\n          <TextField\n            id='outlined-basic-email'\n            label='Search'\n            variant='outlined'\n            fullWidth\n          />\n        </Grid>\n        <Divider />\n        {/* conversations */}\n        {!conversations && (\n          <center>\n            <span> No Active Conversation </span>\n          </center>\n        )}\n\n        <List>\n          {console.log(conversations, 'j')}\n          {conversations.map(conversation => {\n            conversation.recipients = conversation.recipients.filter(\n              recipient => recipient._id !== auth.user._id\n            );\n          })}\n          {conversations.length > 0 ? (\n            conversations.map(conversation => (\n              <span onClick={()=>{onClick(conversation)}}>\n                <ListItem>\n                  <ListItemIcon>\n                    <Avatar\n                      alt='Remy Sharp'\n                      src='https://material-ui.com/static/images/avatar/1.jpg'\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={conversation.recipients[0].name}>\n                    {conversation.recipients[0].name}\n                  </ListItemText>\n                  <ListItemText secondary='online' align='right'></ListItemText>\n                </ListItem>\n              </span>\n            ))\n          ) : (\n            <h4>No conversations found...</h4>\n          )}\n        </List>\n      </Grid>\n    </Fragment>\n  );\n};\n\nConversationsComp.propTypes = {};\n\nexport default ConversationsComp;\n\n//  <ListItem button key='Alice'>\n\n/* <ListItemIcon>\n<Avatar\n  alt='Alice'\n  src='https://material-ui.com/static/images/avatar/3.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Alice'>Alice</ListItemText>\n</ListItem>\n<ListItem button key='CindyBaker'>\n<ListItemIcon>\n<Avatar\n  alt='Cindy Baker'\n  src='https://material-ui.com/static/images/avatar/2.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n</ListItem> */\n",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":6,"column":8,"nodeType":"147","messageId":"148","endLine":6,"endColumn":17},{"ruleId":"149","severity":1,"message":"150","line":16,"column":6,"nodeType":"151","endLine":16,"endColumn":8,"suggestions":"152"},{"ruleId":"149","severity":1,"message":"153","line":27,"column":6,"nodeType":"151","endLine":27,"endColumn":12,"suggestions":"154"},{"ruleId":"145","severity":1,"message":"155","line":4,"column":10,"nodeType":"147","messageId":"148","endLine":4,"endColumn":18},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"156","line":7,"column":5,"nodeType":"147","messageId":"148","endLine":7,"endColumn":9},{"ruleId":"145","severity":1,"message":"157","line":8,"column":5,"nodeType":"147","messageId":"148","endLine":8,"endColumn":13},{"ruleId":"145","severity":1,"message":"158","line":9,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":11},{"ruleId":"145","severity":1,"message":"159","line":10,"column":5,"nodeType":"147","messageId":"148","endLine":10,"endColumn":12},{"ruleId":"145","severity":1,"message":"160","line":11,"column":5,"nodeType":"147","messageId":"148","endLine":11,"endColumn":17},{"ruleId":"145","severity":1,"message":"161","line":12,"column":5,"nodeType":"147","messageId":"148","endLine":12,"endColumn":14},{"ruleId":"145","severity":1,"message":"162","line":13,"column":5,"nodeType":"147","messageId":"148","endLine":13,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"145","severity":1,"message":"146","line":2,"column":8,"nodeType":"147","messageId":"148","endLine":2,"endColumn":17},{"ruleId":"163","severity":1,"message":"164","line":74,"column":43,"nodeType":"165","messageId":"166","endLine":74,"endColumn":45},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["169"],"React Hook useEffect has missing dependencies: 'conversations' and 'username'. Either include them or remove the dependency array.",["170"],"'setAlert' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Avatar' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'TextField' is defined but never used.","'ListItemIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [getConversations]",{"range":"175","text":"176"},"Update the dependencies array to be: [auth, conversations, username]",{"range":"177","text":"178"},[551,553],"[getConversations]",[836,842],"[auth, conversations, username]"]