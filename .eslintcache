[{"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js":"1","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js":"2","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js":"3","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js":"4","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js":"5","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js":"6","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js":"7","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js":"8","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js":"9","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js":"10","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js":"11","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js":"12","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js":"13","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js":"14","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/socketConfig.js":"15","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js":"16","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js":"17","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js":"18","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js":"19","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js":"20","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js":"21","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js":"22","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js":"23","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js":"24","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js":"25","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js":"26","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js":"27","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js":"28"},{"size":412,"mtime":1613729091926,"results":"29","hashOfConfig":"30"},{"size":1757,"mtime":1613759066387,"results":"31","hashOfConfig":"30"},{"size":1020,"mtime":1613729091926,"results":"32","hashOfConfig":"30"},{"size":326,"mtime":1613729091926,"results":"33","hashOfConfig":"30"},{"size":1099,"mtime":1613760987000,"results":"34","hashOfConfig":"30"},{"size":439,"mtime":1613729091922,"results":"35","hashOfConfig":"30"},{"size":980,"mtime":1613759066383,"results":"36","hashOfConfig":"30"},{"size":702,"mtime":1613729091922,"results":"37","hashOfConfig":"30"},{"size":1331,"mtime":1613729091922,"results":"38","hashOfConfig":"30"},{"size":2942,"mtime":1613759066383,"results":"39","hashOfConfig":"30"},{"size":1830,"mtime":1613975491541,"results":"40","hashOfConfig":"30"},{"size":1550,"mtime":1613975491545,"results":"41","hashOfConfig":"30"},{"size":1426,"mtime":1613982905700,"results":"42","hashOfConfig":"30"},{"size":344,"mtime":1613729091922,"results":"43","hashOfConfig":"30"},{"size":188,"mtime":1613829718813,"results":"44","hashOfConfig":"30"},{"size":1301,"mtime":1613759066379,"results":"45","hashOfConfig":"30"},{"size":2957,"mtime":1613980464651,"results":"46","hashOfConfig":"30"},{"size":1439,"mtime":1613759066383,"results":"47","hashOfConfig":"30"},{"size":188,"mtime":1613759066383,"results":"48","hashOfConfig":"30"},{"size":955,"mtime":1613979654848,"results":"49","hashOfConfig":"30"},{"size":752,"mtime":1613975491545,"results":"50","hashOfConfig":"30"},{"size":1189,"mtime":1613979970027,"results":"51","hashOfConfig":"30"},{"size":402,"mtime":1613729091926,"results":"52","hashOfConfig":"30"},{"size":1079,"mtime":1613975491545,"results":"53","hashOfConfig":"30"},{"size":1710,"mtime":1613978221302,"results":"54","hashOfConfig":"30"},{"size":1378,"mtime":1613759066383,"results":"55","hashOfConfig":"30"},{"size":3236,"mtime":1613975491545,"results":"56","hashOfConfig":"30"},{"size":3199,"mtime":1613975491545,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"fjuild",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"60"},"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/index.js",[],["121","122"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/App.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/store.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/utils/setAuthToken.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Landing.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Login.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/layout/Navbar.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/auth/Register.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/auth.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/types.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Chat.js",["123","124","125","126"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/socketConfig.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/auth/LoginComp.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/actions/chat.js",["127"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ChatComp.js",["128"],"import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\nimport NewConversation from '../../containers/chat/NewConversation';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid>\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        <NewConversation></NewConversation>\n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/index.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/NewConversation.js",["129"],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/Conversations.js",["130"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationsComp from '../../components/chat/ConversationsComp';\nimport { connect } from 'react-redux';\nimport { setConversation, getEvents } from '../../actions/chat';\nfunction Conversations({ chat, auth, setConversation, getEvents }) {\n  const onClick = conversation => {\n    setConversation(conversation);\n    getEvents(conversation._id);\n  };\n  return (\n    <ConversationsComp\n      conversations={chat.conversations}\n      auth={auth}\n      onClick={onClick}\n    />\n  );\n}\n\nConversations.propTypes = {};\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { setConversation, getEvents })(\n  Conversations\n);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/containers/chat/ConversationWindow.js",["131"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationWindowComp from '../../components/chat/ConversationWindowComp';\nimport { connect } from 'react-redux';\nimport { newEvent } from '../../actions/chat';\nimport socket from '../../socketConfig';\n\nfunction ConversationWindow({ chat, newEvent }) {\n  const [formData, setFormData] = useState({\n    text: '',\n    type: 'new',\n  });\n\n  const onChange = e => setFormData({ ...formData, text: e.target.value });\n\n  const onSubmit = () => {\n    formData.chatRoomId = chat.conversation._id;\n    formData.messageId= chat.events.length + 1;\n\n    console.log(chat.events.length,\"length\")\n    newEvent(formData);\n    const { text, chatRoomId } = formData;\n    // socket.emit('newEvent', formData);\n    setFormData({ ...formData, text: '' });\n  };\n\n  return (\n    <ConversationWindowComp\n      conversation={chat.conversation}\n      formData={formData}\n      onChange={onChange}\n      onSubmit={onSubmit}\n    />\n  );\n}\n\nConversationWindow.propTypes = {};\n\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { newEvent })(ConversationWindow);\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/alert.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/auth.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/reducers/chat.js",[],"/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/NewConversationComp.js",["132","133","134","135","136","137","138","139"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport {\n    Grid,\n    List,\n    ListItem,\n    Avatar,\n    Divider,\n    ListItemText,\n    TextField,\n    ListItemIcon,\n  } from '@material-ui/core';\n  const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh',\n    },\n    headBG: {\n      backgroundColor: '#e0e0e0',\n    },\n    borderRight500: {\n      borderRight: '1px solid #e0e0e0',\n  \n      backgroundColor: 'lightGrey',\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto',\n    },\n  });\nconst NewConversationComp = ({ formData, onChange, onSubmit }) => {\n  const { username } = formData;\n  const classes = useStyles();\n\n  return (\n    <div>\n        <Grid item xs={1} className={classes.borderRight500}>\n      <h3>Converastions</h3>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='username'\n            placeholder='Username'\n            name='username'\n            value={username}\n            onChange={onChange}\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='login' />\n      </form>\n      </Grid>\n    </div>\n  );\n};\n\nNewConversationComp.propTypes = {};\n\nexport default NewConversationComp;\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationsComp.js",["140","141"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  Avatar,\n  Divider,\n  ListItemText,\n  TextField,\n  ListItemIcon,\n} from '@material-ui/core';\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n\n    backgroundColor: 'lightGrey',\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationsComp = ({ conversations, auth, onClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Fragment>\n      <Grid item xs={2} className={classes.borderRight500}>\n        {/* user */}\n        <List>\n          <ListItem button key='RemySharp'>\n            <ListItemIcon>\n              <Avatar\n                alt='Remy Sharp'\n                src='https://material-ui.com/static/images/avatar/1.jpg'\n              />\n            </ListItemIcon>\n            <ListItemText primary='John Wick'></ListItemText>\n          </ListItem>\n        </List>\n        <Divider />\n        {/* search bar  */}\n        <Grid item xs={12} style={{ padding: '10px' }}>\n          <TextField\n            id='outlined-basic-email'\n            label='Search'\n            variant='outlined'\n            fullWidth\n          />\n        </Grid>\n        <Divider />\n        {/* conversations */}\n        {!conversations && (\n          <center>\n            <span> No Active Conversation </span>\n          </center>\n        )}\n\n        <List>\n          {console.log(conversations, 'j')}\n          {conversations.map(conversation => {\n            conversation.recipients = conversation.recipients.filter(\n              recipient => recipient._id !== auth.user._id\n            );\n          })}\n          {conversations.length > 0 ? (\n            conversations.map(conversation => (\n            \n                <ListItem button onClick={()=>{onClick(conversation)}} >\n                  <ListItemIcon>\n                    <Avatar\n                      alt='Remy Sharp'\n                      src='https://material-ui.com/static/images/avatar/1.jpg'\n                    />\n                  </ListItemIcon>\n                  <ListItemText primary={conversation.recipients[0].name}>\n                    {conversation.recipients[0].name}\n                  </ListItemText>\n                  <ListItemText secondary='online' align='right'></ListItemText>\n                </ListItem>\n\n            ))\n          ) : (\n            <h4>No conversations found...</h4>\n          )}\n        </List>\n      </Grid>\n    </Fragment>\n  );\n};\n\nConversationsComp.propTypes = {};\n\nexport default ConversationsComp;\n\n//  <ListItem button key='Alice'>\n\n/* <ListItemIcon>\n<Avatar\n  alt='Alice'\n  src='https://material-ui.com/static/images/avatar/3.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Alice'>Alice</ListItemText>\n</ListItem>\n<ListItem button key='CindyBaker'>\n<ListItemIcon>\n<Avatar\n  alt='Cindy Baker'\n  src='https://material-ui.com/static/images/avatar/2.jpg'\n/>\n</ListItemIcon>\n<ListItemText primary='Cindy Baker'>Cindy Baker</ListItemText>\n</ListItem> */\n","/home/lenovo/mernProjects/cheddar/frontend/cheddar-frontend/src/components/chat/ConversationWindowComp.js",["142"],"import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Grid,\n  List,\n  ListItem,\n  Divider,\n  ListItemText,\n  TextField,\n  Fab,\n} from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n  chatSection: {\n    width: '100%',\n    height: '80vh',\n  },\n  headBG: {\n    backgroundColor: '#e0e0e0',\n  },\n  borderRight500: {\n    borderRight: '1px solid #e0e0e0',\n\n    backgroundColor: '#0000e0',\n  },\n  messageArea: {\n    height: '70vh',\n    overflowY: 'auto',\n  },\n});\n\nconst ConversationWindowComp = ({\n  conversation,\n  onChange,\n  onSubmit,\n  formData,\n}) => {\n  const classes = useStyles();\n  const { text } = formData;\n  if (conversation) {\n    return (\n      <Fragment>\n        <Grid item xs={8}>\n          <List className={classes.messageArea}>\n            <ListItem key='1'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='right'\n                    primary=\"Hey man, What's up ?\"\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='right' secondary='09:30'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n            <ListItem key='2'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='left'\n                    primary='Hey, Iam Good! What about you ?'\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='left' secondary='09:31'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n            <ListItem key='3'>\n              <Grid container>\n                <Grid item xs={12}>\n                  <ListItemText\n                    align='right'\n                    primary=\"Cool. i am good, let's catch up!\"\n                  ></ListItemText>\n                </Grid>\n                <Grid item xs={12}>\n                  <ListItemText align='right' secondary='10:30'></ListItemText>\n                </Grid>\n              </Grid>\n            </ListItem>\n          </List>\n          <Divider />\n          <Grid container style={{ padding: '20px' }}>\n            <Grid item xs={11}>\n              <TextField\n                id='outlined-basic-email'\n                label='Type Something'\n                fullWidth\n                value={text}\n                onChange={onChange}\n              ></TextField>\n            </Grid>\n            <Grid xs={1} align='right'>\n              <Fab\n                color='primary'\n                aria-label='add'\n                onClick={() => {\n                  onSubmit();\n                }}\n              >\n                <SendIcon />\n              </Fab>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Fragment>\n    );\n  } else {\n    return <Fragment> No Conversation Selected </Fragment>;\n  }\n};\n\nConversationWindowComp.propTypes = {};\n\nexport default ConversationWindowComp;\n",{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":6,"column":8,"nodeType":"149","messageId":"150","endLine":6,"endColumn":17},{"ruleId":"151","severity":1,"message":"152","line":16,"column":6,"nodeType":"153","endLine":16,"endColumn":8,"suggestions":"154"},{"ruleId":"151","severity":1,"message":"155","line":26,"column":6,"nodeType":"153","endLine":26,"endColumn":31,"suggestions":"156"},{"ruleId":"151","severity":1,"message":"157","line":40,"column":6,"nodeType":"153","endLine":40,"endColumn":8,"suggestions":"158"},{"ruleId":"147","severity":1,"message":"159","line":4,"column":10,"nodeType":"149","messageId":"150","endLine":4,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"147","severity":1,"message":"160","line":7,"column":5,"nodeType":"149","messageId":"150","endLine":7,"endColumn":9},{"ruleId":"147","severity":1,"message":"161","line":8,"column":5,"nodeType":"149","messageId":"150","endLine":8,"endColumn":13},{"ruleId":"147","severity":1,"message":"162","line":9,"column":5,"nodeType":"149","messageId":"150","endLine":9,"endColumn":11},{"ruleId":"147","severity":1,"message":"163","line":10,"column":5,"nodeType":"149","messageId":"150","endLine":10,"endColumn":12},{"ruleId":"147","severity":1,"message":"164","line":11,"column":5,"nodeType":"149","messageId":"150","endLine":11,"endColumn":17},{"ruleId":"147","severity":1,"message":"165","line":12,"column":5,"nodeType":"149","messageId":"150","endLine":12,"endColumn":14},{"ruleId":"147","severity":1,"message":"166","line":13,"column":5,"nodeType":"149","messageId":"150","endLine":13,"endColumn":17},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},{"ruleId":"167","severity":1,"message":"168","line":74,"column":43,"nodeType":"169","messageId":"170","endLine":74,"endColumn":45},{"ruleId":"147","severity":1,"message":"148","line":2,"column":8,"nodeType":"149","messageId":"150","endLine":2,"endColumn":17},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["173"],"React Hook useEffect has missing dependencies: 'conversations' and 'username'. Either include them or remove the dependency array.",["174"],"React Hook useEffect has a missing dependency: 'addConversation'. Either include it or remove the dependency array. If 'addConversation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["175"],"'setAlert' is defined but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Avatar' is defined but never used.","'Divider' is defined but never used.","'ListItemText' is defined but never used.","'TextField' is defined but never used.","'ListItemIcon' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [getConversations]",{"range":"182","text":"183"},"Update the dependencies array to be: [auth, chat.conversations, conversations, username]",{"range":"184","text":"185"},"Update the dependencies array to be: [addConversation]",{"range":"186","text":"187"},[602,604],"[getConversations]",[840,865],"[auth, chat.conversations, conversations, username]",[1219,1221],"[addConversation]"]