[{"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js":"1","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js":"2","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js":"3","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js":"4","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js":"5","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js":"6","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js":"7","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js":"8","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js":"9","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js":"10","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js":"11","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js":"12","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js":"13","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js":"14","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js":"15","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js":"16","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js":"17","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js":"18","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/RegisterComp.js":"19","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js":"20","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js":"21","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js":"22","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js":"23","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js":"24","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js":"25","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js":"26","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js":"27","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js":"28","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js":"29"},{"size":412,"mtime":1611561004938,"results":"30","hashOfConfig":"31"},{"size":1757,"mtime":1613833581344,"results":"32","hashOfConfig":"31"},{"size":1020,"mtime":1611559052277,"results":"33","hashOfConfig":"31"},{"size":1544,"mtime":1614151684977,"results":"34","hashOfConfig":"31"},{"size":1860,"mtime":1614061256886,"results":"35","hashOfConfig":"31"},{"size":326,"mtime":1613656848213,"results":"36","hashOfConfig":"31"},{"size":439,"mtime":1611568033707,"results":"37","hashOfConfig":"31"},{"size":1331,"mtime":1611567974929,"results":"38","hashOfConfig":"31"},{"size":1099,"mtime":1613833581344,"results":"39","hashOfConfig":"31"},{"size":1903,"mtime":1614189923514,"results":"40","hashOfConfig":"31"},{"size":702,"mtime":1613656958392,"results":"41","hashOfConfig":"31"},{"size":1526,"mtime":1614056725935,"results":"42","hashOfConfig":"31"},{"size":980,"mtime":1613717137960,"results":"43","hashOfConfig":"31"},{"size":344,"mtime":1611560345132,"results":"44","hashOfConfig":"31"},{"size":232,"mtime":1614062632598,"results":"45","hashOfConfig":"31"},{"size":3909,"mtime":1614189588575,"results":"46","hashOfConfig":"31"},{"size":1308,"mtime":1614056725935,"results":"47","hashOfConfig":"31"},{"size":3576,"mtime":1614056725935,"results":"48","hashOfConfig":"31"},{"size":4669,"mtime":1614056725935,"results":"49","hashOfConfig":"31"},{"size":188,"mtime":1613676975123,"results":"50","hashOfConfig":"31"},{"size":950,"mtime":1614151684981,"results":"51","hashOfConfig":"31"},{"size":1834,"mtime":1614079424387,"results":"52","hashOfConfig":"31"},{"size":402,"mtime":1611560521952,"results":"53","hashOfConfig":"31"},{"size":1079,"mtime":1613838416226,"results":"54","hashOfConfig":"31"},{"size":3538,"mtime":1614190151707,"results":"55","hashOfConfig":"31"},{"size":3554,"mtime":1614198258970,"results":"56","hashOfConfig":"31"},{"size":8468,"mtime":1614196313681,"results":"57","hashOfConfig":"31"},{"size":919,"mtime":1614056725935,"results":"58","hashOfConfig":"31"},{"size":1376,"mtime":1614198299101,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1vfk2tk",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/index.js",[],["125","126"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/App.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/store.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/types.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/auth.js",["127"],"// import api from '../utils/api';\nimport axios from 'axios';\nimport setAuthToken from '../utils/setAuthToken';\n\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_CHAT,\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n   \n    if(localStorage.token){\n      setAuthToken(localStorage.token)\n  }\n const res = await axios.get('/api/auth');\n   \n    console.log('load_user()', res.data);\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log('Load_use()', err);\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n// Register User\nexport const register = formData => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n\n  try {\n    const res = await axios.post('/api/user', formData, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (body) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  };\n  \n\n  try {\n    console.log('hi')\n    const res = await axios.post('/api/auth', body, config);\n\n    // const res={data:'hi'}\n    console.log(res.data)\n    await dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data,\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    console.log(err);\n    \n    dispatch({\n      type: LOGIN_FAIL,\n    });\n  }\n};\n\n// Logout\nexport const logout = () => ({ type:CLEAR_CHAT, type: LOGOUT });\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/utils/setAuthToken.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Navbar.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/layout/Landing.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Chat.js",["128","129","130","131","132","133"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/routing/PrivateRoute.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Register.js",["134"],"import React, { Fragment, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\nimport RegisterComp from \"../../components/auth/RegisterComp\";\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    username:'',\n    email: '',\n    password: '',\n    password2: '',\n\n  });\n\n  const { name,username, email, password, password2 } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger');\n    } else {\n      register({ name,username, email, password});\n      console.log('fjhdjh');\n    }\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/chat' />;\n  }\n\n  return (\n    <Fragment>\n      <div className=\"\">\n        <RegisterComp\n          onChange={onChange}\n          onSubmit={onSubmit}\n          formData={formData}\n        />\n      </div>\n    </Fragment>\n\n  );\n};\n\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool,\n  \n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n});\n\nexport default connect(mapStateToProps, { setAlert, register})(Register);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/auth/Login.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/socketConfig.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/actions/chat.js",["135"],"// import api from '../utils/api';\nimport axios from \"axios\";\n\nimport { setAlert } from \"./alert\";\nimport {\n  GET_CONVERSATIONS,\n  GET_CONVERSATIONS_ERROR,\n  NEW_CONVERSATION,\n  NEW_CONVERSATION_ERROR,\n  SET_CONVERSATION,\n  SET_CONVERSATION_ERROR,\n  GET_EVENTS,\n  GET_EVENTS_ERROR,\n  NEW_EVENT,\n  NEW_EVENT_ERROR,\n  ADD_CONVERSATION,\n  ADD_CONVERSATION_ERROR,\n  ADD_EVENT_ERROR,\n  ADD_EVENT,\n  ADD_NOTIFICATION,\n  ADD_NOTIFICATION_ERROR,\n  ADD_ONLINE,\n  ADD_OFFLINE,\n  ADD_STATUS_ERROR\n\n\n} from \"./types\";\n\n// Load User\nexport const getConversations = () => async (dispatch) => {\n  try {\n    const res = await axios.get(\"/api/user/conversations\");\n    console.log(\"load_user()\", res.data);\n    dispatch({\n      type: GET_CONVERSATIONS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(\"Load_use()\", err);\n    dispatch({\n      type: GET_CONVERSATIONS_ERROR,\n    });\n  }\n};\n\nexport const newConversation = (body) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  try {\n    const res = await axios.post(\"/api/user/newConversation\", body, config);\n\n    console.log(\"load_user()\", res.data);\n    dispatch({\n      type: NEW_CONVERSATION,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(\"Load_use()\", err);\n    dispatch({\n      type: NEW_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const setConversation = (conversation) => async (dispatch) => {\n  try {\n    dispatch({\n      type: SET_CONVERSATION,\n      payload: conversation,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: SET_CONVERSATION_ERROR,\n    });\n  }\n};\n\nexport const getEvents = (chatId,username) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const timestamp = null;\n  const body = { chatRoomId: chatId, timestamp: timestamp, username:username};\n  console.log(body);\n\n  try {\n    const res = await axios.post(\"/api/event/getEvents\", body, config);\n    console.log(res.data);\n    dispatch({\n      type: GET_EVENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: GET_EVENTS_ERROR,\n    });\n  }\n};\n\nexport const newEvent = (body) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  console.log(body, \"In newEvent jiiiiiiiiiiii\");\n  try {\n    const res = await axios.post(\"/api/event/newEvent\", body, config);\n    //socket event\n\n    dispatch({\n      type: NEW_EVENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: NEW_EVENT_ERROR,\n    });\n  }\n};\n\nexport const addConversation = (body) => async (dispatch) => {\n  console.log(\"In add Conversation \");\n  try {\n    dispatch({\n      type: ADD_CONVERSATION,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_CONVERSATION_ERROR,\n    });\n  }\n};\nexport const addEvent = (body) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_EVENT,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_EVENT_ERROR,\n    });\n  }\n};\n\n\nexport const addNotification = (body) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_NOTIFICATION,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_NOTIFICATION_ERROR,\n    });\n  }\n};\n\nexport const addOnline = (body) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_ONLINE,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_STATUS_ERROR,\n    });\n  }\n};\n\nexport const addOffline = (body) => async (dispatch) => {\n  try {\n    dispatch({\n      type: ADD_OFFLINE,\n      payload: body,\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: ADD_STATUS_ERROR,\n    });\n  }\n};\n\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ChatComp.js",["136"],"import React from 'react'\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Conversations from '../../containers/chat/Conversations';\n\nimport ConversationWindow from '../../containers/chat/ConversationWindow';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n    chatSection: {\n      width: '100%',\n      height: '80vh'\n    },\n    headBG: {\n        backgroundColor: '#e0e0e0'\n    },\n    borderRight500: {\n        borderRight: '1px solid #e0e0e0',\n  \n        backgroundColor: '#0000e0'\n    },\n    messageArea: {\n      height: '70vh',\n      overflowY: 'auto'\n    }\n  });\nconst ChatComp = props => {\n    const classes = useStyles();\n    return (\n        <div>\n        <Grid container>\n            {/* <Grid item xs={12} >\n                <Typography variant=\"h5\" className=\"header-message\">Chat</Typography>\n            </Grid> */}\n        </Grid>\n        <Grid container component={Paper} className={classes.chatSection}>\n        \n            <Conversations></Conversations>\n            <ConversationWindow></ConversationWindow>\n            \n        </Grid>\n      </div>\n    )\n}\n\nChatComp.propTypes = {\n\n}\n\nexport default ChatComp\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/LoginComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/auth/RegisterComp.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/index.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/Conversations.js",["137"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ConversationsComp from \"../../components/chat/ConversationsComp\";\nimport { connect } from \"react-redux\";\nimport { setConversation, getEvents } from \"../../actions/chat\";\nfunction Conversations({ chat, auth, setConversation, getEvents }) {\n  const onClick = (conversation) => {\n    const username =\n      conversation.recipients[0].username === auth.user.username\n        ? conversation.recipients[1].username\n        : conversation.recipients[0].name;\n        \n    setConversation(conversation);\n    getEvents(conversation._id, username);\n  };\n  return (\n    <ConversationsComp\n      conversations={chat.conversations}\n      auth={auth}\n      onClick={onClick}\n    />\n  );\n}\n\nConversations.propTypes = {};\nconst mapStateToProps = (state) => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { setConversation, getEvents })(\n  Conversations\n);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/ConversationWindow.js",["138","139","140","141"],"import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ConversationWindowComp from '../../components/chat/ConversationWindowComp';\nimport { connect } from 'react-redux';\nimport { newEvent } from '../../actions/chat';\nimport socket from '../../socketConfig';\n\nfunction ConversationWindow({ chat, newEvent,auth }) {\n  const [formData, setFormData] = useState({\n    text: '',\n  });\n\n  const onChange = e => setFormData({ ...formData, text: e.target.value });\n\n  const onSubmit = () => {\n    formData.chatRoomId = chat.conversation._id;\n    formData.messageId= chat.events.length + 1;\n    formData.type= 'new';\n\n    console.log(chat.events.length,\"length\")\n    newEvent(formData);\n    const { text, chatRoomId } = formData;\n    \n    // socket.emit('newEvent', {formData});\n    setFormData({ ...formData, text: '' });\n  };\n  const editEvent=(text,eventPre)=>{\n    const event={};\n    console.log(text,eventPre);\n    event.chatRoomId = eventPre.chatRoomId;\n    event.messageId= eventPre.messageId\n    event.type= 'edit';\n    event.text=text;\n    newEvent(event);\n  }\n  const deleteEvent=(eventPre)=>{\n    const event={};\n    event.chatRoomId = eventPre.chatRoomId;\n    event.messageId= eventPre.messageId\n    event.type= 'delete';\n    event.text=\"This message was deleted\";\n    console.log(event,\"In sumbit delte event\")\n    newEvent(event);\n  }\n  return (\n    <ConversationWindowComp\n    events={chat.events}\n      conversation={chat.conversation}\n      formData={formData}\n      onChange={onChange}\n      onSubmit={onSubmit}\n      auth={auth}\n      deleteEvent={deleteEvent}\n      editEvent={editEvent}\n    />\n  );\n}\n\nConversationWindow.propTypes = {};\n\nconst mapStateToProps = state => ({\n  chat: state.chat,\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { newEvent })(ConversationWindow);\n","/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/alert.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/auth.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/reducers/chat.js",["142"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationsComp.js",["143","144"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/ConversationWindowComp.js",["145","146","147"],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/containers/chat/NewConversation.js",[],"/home/lenovo/Desktop/projects/cheddar-frontend/client/src/components/chat/NewConversationComp.js",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":98,"column":49,"nodeType":"154","messageId":"155","endLine":98,"endColumn":53},{"ruleId":"156","severity":1,"message":"157","line":11,"column":8,"nodeType":"158","messageId":"159","endLine":11,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":27,"column":6,"nodeType":"162","endLine":27,"endColumn":8,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":36,"column":6,"nodeType":"162","endLine":36,"endColumn":32,"suggestions":"165"},{"ruleId":"160","severity":1,"message":"166","line":49,"column":6,"nodeType":"162","endLine":49,"endColumn":25,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"168","line":55,"column":6,"nodeType":"162","endLine":55,"endColumn":8,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"170","line":61,"column":6,"nodeType":"162","endLine":61,"endColumn":8,"suggestions":"171"},{"ruleId":"156","severity":1,"message":"172","line":3,"column":10,"nodeType":"158","messageId":"159","endLine":3,"endColumn":14},{"ruleId":"156","severity":1,"message":"173","line":4,"column":10,"nodeType":"158","messageId":"159","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"174","line":4,"column":8,"nodeType":"158","messageId":"159","endLine":4,"endColumn":18},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"175","line":6,"column":8,"nodeType":"158","messageId":"159","endLine":6,"endColumn":14},{"ruleId":"156","severity":1,"message":"176","line":22,"column":13,"nodeType":"158","messageId":"159","endLine":22,"endColumn":17},{"ruleId":"156","severity":1,"message":"177","line":22,"column":19,"nodeType":"158","messageId":"159","endLine":22,"endColumn":29},{"ruleId":"156","severity":1,"message":"178","line":12,"column":3,"nodeType":"158","messageId":"159","endLine":12,"endColumn":14},{"ruleId":"156","severity":1,"message":"179","line":10,"column":3,"nodeType":"158","messageId":"159","endLine":10,"endColumn":9},{"ruleId":"156","severity":1,"message":"180","line":13,"column":3,"nodeType":"158","messageId":"159","endLine":13,"endColumn":15},{"ruleId":"156","severity":1,"message":"181","line":1,"column":27,"nodeType":"158","messageId":"159","endLine":1,"endColumn":35},{"ruleId":"156","severity":1,"message":"157","line":2,"column":8,"nodeType":"158","messageId":"159","endLine":2,"endColumn":17},{"ruleId":"156","severity":1,"message":"182","line":10,"column":3,"nodeType":"158","messageId":"159","endLine":10,"endColumn":11},"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"no-dupe-keys","Duplicate key 'type'.","ObjectExpression","unexpected","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getConversations'. Either include it or remove the dependency array. If 'getConversations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["185"],"React Hook useEffect has missing dependencies: 'conversations' and 'username'. Either include them or remove the dependency array.",["186"],"React Hook useEffect has missing dependencies: 'addEvent' and 'addNotification'. Either include them or remove the dependency array. If 'addEvent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["187"],"React Hook useEffect has a missing dependency: 'addConversation'. Either include it or remove the dependency array. If 'addConversation' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["188"],"React Hook useEffect has a missing dependency: 'addOnline'. Either include it or remove the dependency array. If 'addOnline' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["189"],"'Link' is defined but never used.","'setAlert' is defined but never used.","'Typography' is defined but never used.","'socket' is defined but never used.","'text' is assigned a value but never used.","'chatRoomId' is assigned a value but never used.","'ADD_OFFLINE' is defined but never used.","'Avatar' is defined but never used.","'ListItemIcon' is defined but never used.","'useState' is defined but never used.","'ListItem' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},"Update the dependencies array to be: [getConversations]",{"range":"200","text":"201"},"Update the dependencies array to be: [auth, chat.conversations, conversations, username]",{"range":"202","text":"203"},"Update the dependencies array to be: [addEvent, addNotification, chat.conversation]",{"range":"204","text":"205"},"Update the dependencies array to be: [addConversation]",{"range":"206","text":"207"},"Update the dependencies array to be: [addOnline]",{"range":"208","text":"209"},[590,592],"[getConversations]",[831,857],"[auth, chat.conversations, conversations, username]",[1302,1321],"[addEvent, addNotification, chat.conversation]",[1492,1494],"[addConversation]",[1653,1655],"[addOnline]"]